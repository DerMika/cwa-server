name: "PR on development branch"
on:
  pull_request:
    branches:
      - development
  push:
    branches:
      - feature/CBA-155-cicd

jobs:
  distribution:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Pull HaDoLint image
        run: docker pull hadolint/hadolint
      - name: Lint Dockerfile
        run: docker run --rm --interactive hadolint/hadolint < ./services/distribution/Dockerfile
      - uses: actions/cache@v1
        env:
          cache-name: m2
        with:
          path: ~/.m2/repository
          key: ${{ env.cache-name }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ env.cache-name }}-
      - uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: docker build
        run: |
          docker build --pull --rm \
          -f services/distribution/Dockerfile \
          --tag ${ECR_REPO_HOST}/${ECR_REPO_NAME}:${GITHUB_SHA} \
          .
        env:
          ECR_REPO_HOST: ${{ secrets.ECR_REPO_HOST }}
          ECR_REPO_NAME: ${{ secrets.ECR_REPO_NAME_DISTRIBUTION }}
#      - name: Docker Image Vulnerability scan
#        uses: anchore/scan-action@v1
#        with:
#          image-reference: "${ECR_REPO_HOST}/${ECR_REPO_NAME}:${GITHUB_SHA}"
#        env:
#          ECR_REPO_HOST: ${{ secrets.ECR_REPO_HOST }}
#          ECR_REPO_NAME: ${{ secrets.ECR_REPO_NAME_DISTRIBUTION }}
      - name: anchore inline scan JSON results
        if: ${{ always() }}
        run: for j in `ls ./anchore-reports/*.json`; do echo "---- ${j} ----"; cat ${j}; echo; done
      - name: anchore action SARIF report
        if: ${{ always() }}
        run: cat results.sarif
      - name: docker push ecr
        run: |
          sudo apt-get install --yes awscli
          aws ecr get-login-password | docker login --username AWS --password-stdin ${ECR_REPO_HOST}
          docker push ${ECR_REPO_HOST}/${ECR_REPO_NAME}:${GITHUB_SHA}
        env:
          ECR_REPO_HOST: ${{ secrets.ECR_REPO_HOST }}
          ECR_REPO_NAME: ${{ secrets.ECR_REPO_NAME_DISTRIBUTION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_PUSHECR }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_PUSHECR }}
          AWS_DEFAULT_REGION: eu-central-1
#      - name: Deploy
#        uses: ixorbe/gha-aws-deploy-service@v0.1
#        with:
#          no-deploy: true
#        env:
#          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_PUSHECR }}
#          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_PUSHECR }}
#          AWS_DEFAULT_REGION: eu-central-1
#          TASK_DEFINITION: task-covid19-dev-distribution
#          CONTAINER_NAME: covid19-dev-distribution
#          IMAGE: ${ECR_REPO_HOST}/${ECR_REPO_NAME}:${GITHUB_SHA}
      - name: Install AWS CLI
        uses: chrislennon/action-aws-cli@v1.1
      - name: Get current task definition
        run: |
          aws ecs describe-task-definition \
            --task-definition ${TASK_DEFINITION} \
            --query taskDefinition > task-definition.json
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_PUSHECR }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_PUSHECR }}
          AWS_DEFAULT_REGION: eu-central-1
          TASK_DEFINITION: task-covid19-dev-distribution
      - name: Render task definition
        id: render-task-definition
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: ${CONTAINER_NAME}
          image: ${IMAGE}
        env:
          CONTAINER_NAME: covid19-dev-distribution
          IMAGE: ${ECR_REPO_HOST}/${ECR_REPO_NAME}:${GITHUB_SHA}
      - name: Deploy task definition
        run: |
            aws ecs register-task-definition --cli-input-json file://${{ steps.render-task-definition.outputs.task-definition }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_PUSHECR }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_PUSHECR }}
          AWS_DEFAULT_REGION: eu-central-1
          TASK_DEFINITION: task-covid19-dev-distribution
          CONTAINER_NAME: covid19-dev-distribution
          IMAGE: ${ECR_REPO_HOST}/${ECR_REPO_NAME}:${GITHUB_SHA}
      - name: Update scheduled task
        run: echo "TODO"



