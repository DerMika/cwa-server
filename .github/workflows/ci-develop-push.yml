name: "PR on development branch"
on:
  push:
    branches-ignore:
      - '**'

jobs:
  build_docker_image_name:
    runs-on: ubuntu-latest
    steps:
      - name:
        env:
          ECR_REPO_HOST: ${{ secrets.ECR_REPO_HOST }}
          ECR_REPO_NAME: ${{ secrets.ECR_REPO_NAME_DISTRIBUTION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_PUSHECR }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_PUSHECR }}
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: docker_image_name
          path: math-homework.txt
  distribution:
    runs-on: ubuntu-latest
    steps:
      - name: Build docker image name to install
        run: echo '::set-env name=IMAGE_NAME::${ECR_REPO_HOST}/${ECR_REPO_NAME}:${'
        env:
          ECR_REPO_HOST: ${{ secrets.ECR_REPO_HOST }}
          ECR_REPO_NAME: ${{ secrets.ECR_REPO_NAME_DISTRIBUTION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_PUSHECR }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_PUSHECR }}
      - name: Get task definition for staging environment
      - name: Create new task definition for staging environment
      - name: Get task definition for test environment
      - name: Create new task definition for test environment

        run: |
          sudo apt-get install --yes awscli
          aws ecr get-login-password | docker login --username AWS --password-stdin ${ECR_REPO_HOST}
          docker push ${ECR_REPO_HOST}/${ECR_REPO_NAME}:${GITHUB_SHA}
        env:
          ECR_REPO_HOST: ${{ secrets.ECR_REPO_HOST }}
          ECR_REPO_NAME: ${{ secrets.ECR_REPO_NAME_DISTRIBUTION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_PUSHECR }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_PUSHECR }}

